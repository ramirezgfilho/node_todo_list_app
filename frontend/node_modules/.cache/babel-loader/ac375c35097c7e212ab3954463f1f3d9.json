{"ast":null,"code":"import { r as registerInstance, h, c as getIonMode, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nvar Card =\n/** @class */\nfunction () {\n  function Card(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, a button tag will be rendered and the card will be tappable.\n     */\n\n    this.button = false;\n    /**\n     * The type of the button. Only used when an `onclick` or `button` property is present.\n     */\n\n    this.type = 'button';\n    /**\n     * If `true`, the user cannot interact with the card.\n     */\n\n    this.disabled = false;\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n  }\n\n  Card.prototype.isClickable = function () {\n    return this.href !== undefined || this.button;\n  };\n\n  Card.prototype.renderCard = function (mode) {\n    var clickable = this.isClickable();\n\n    if (!clickable) {\n      return [h(\"slot\", null)];\n    }\n\n    var _a = this,\n        href = _a.href,\n        routerDirection = _a.routerDirection;\n\n    var TagType = clickable ? href === undefined ? 'button' : 'a' : 'div';\n    var attrs = TagType === 'button' ? {\n      type: this.type\n    } : {\n      download: this.download,\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return h(TagType, Object.assign({}, attrs, {\n      class: \"card-native\",\n      disabled: this.disabled,\n      onClick: function (ev) {\n        return openURL(href, ev, routerDirection);\n      }\n    }), h(\"slot\", null), clickable && mode === 'md' && h(\"ion-ripple-effect\", null));\n  };\n\n  Card.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: Object.assign(Object.assign((_a = {}, _a[mode] = true, _a), createColorClasses(this.color)), {\n        'card-disabled': this.disabled,\n        'ion-activatable': this.isClickable()\n      })\n    }, this.renderCard(mode));\n  };\n\n  Object.defineProperty(Card, \"style\", {\n    get: function () {\n      return \".sc-ion-card-md-h{--ion-safe-area-left:0px;--ion-safe-area-right:0px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:block;position:relative;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);overflow:hidden}.ion-color.sc-ion-card-md-h{background:var(--ion-color-base)}.ion-color.sc-ion-card-md-h, .sc-ion-card-md-h.ion-color.sc-ion-card-md-s  ion-card-header , .sc-ion-card-md-h.ion-color.sc-ion-card-md-s  ion-card-subtitle , .sc-ion-card-md-h.ion-color.sc-ion-card-md-s  ion-card-title {color:var(--ion-color-contrast)}.sc-ion-card-md-s  img {display:block;width:100%}.sc-ion-card-md-s  ion-list {margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}.card-disabled.sc-ion-card-md-h{cursor:default;opacity:.3;pointer-events:none}.card-native.sc-ion-card-md{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;min-height:var(--min-height);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background)}.card-native.sc-ion-card-md::-moz-focus-inner{border:0}a.sc-ion-card-md, button.sc-ion-card-md{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none}ion-ripple-effect.sc-ion-card-md{color:var(--ripple-color)}.sc-ion-card-md-h{--background:var(--ion-item-background,transparent);--color:var(--ion-color-step-550,#737373);margin-left:10px;margin-right:10px;margin-top:10px;margin-bottom:10px;border-radius:4px;font-size:14px;-webkit-box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.sc-ion-card-md-h{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Card;\n}();\n\nvar CardContent =\n/** @class */\nfunction () {\n  function CardContent(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  CardContent.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, // Used internally for styling\n      _a[\"card-content-\" + mode] = true, _a)\n    });\n  };\n\n  Object.defineProperty(CardContent, \"style\", {\n    get: function () {\n      return \"ion-card-content{display:block;position:relative}.card-content-md{padding-left:16px;padding-right:16px;padding-top:13px;padding-bottom:13px;font-size:14px;line-height:1.5}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.card-content-md{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.card-content-md h1{margin-left:0;margin-right:0;margin-top:0;margin-bottom:2px;font-size:24px;font-weight:400}.card-content-md h2{margin-left:0;margin-right:0;margin-top:2px;margin-bottom:2px;font-size:16px;font-weight:400}.card-content-md h3,.card-content-md h4,.card-content-md h5,.card-content-md h6{margin-left:0;margin-right:0;margin-top:2px;margin-bottom:2px;font-size:14px;font-weight:400}.card-content-md p{margin-left:0;margin-right:0;margin-top:0;margin-bottom:2px;font-size:14px;font-weight:400;line-height:1.5}ion-card-header+.card-content-md{padding-top:0}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CardContent;\n}();\n\nvar CardHeader =\n/** @class */\nfunction () {\n  function CardHeader(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, the card header will be translucent.\n     * Only applies when the mode is `\"ios\"` and the device supports\n     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n     */\n\n    this.translucent = false;\n  }\n\n  CardHeader.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {\n        'card-header-translucent': this.translucent\n      }, _a[mode] = true, _a))\n    }, h(\"slot\", null));\n  };\n\n  Object.defineProperty(CardHeader, \"style\", {\n    get: function () {\n      return \":host{display:block;position:relative;background:var(--background);color:var(--color)}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.ion-color) ::slotted(ion-card-subtitle),:host(.ion-color) ::slotted(ion-card-title){color:currentColor}:host{padding-left:16px;padding-right:16px;padding-top:16px;padding-bottom:16px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}::slotted(ion-card-subtitle:not(:first-child)),::slotted(ion-card-title:not(:first-child)){margin-top:8px}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CardHeader;\n}();\n\nvar CardSubtitle =\n/** @class */\nfunction () {\n  function CardSubtitle(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  CardSubtitle.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      role: \"heading\",\n      \"aria-level\": \"3\",\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a))\n    }, h(\"slot\", null));\n  };\n\n  Object.defineProperty(CardSubtitle, \"style\", {\n    get: function () {\n      return \":host{display:block;position:relative;color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-550,#737373);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-size:14px;font-weight:500}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CardSubtitle;\n}();\n\nvar CardTitle =\n/** @class */\nfunction () {\n  function CardTitle(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  CardTitle.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      role: \"heading\",\n      \"aria-level\": \"2\",\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a))\n    }, h(\"slot\", null));\n  };\n\n  Object.defineProperty(CardTitle, \"style\", {\n    get: function () {\n      return \":host{display:block;position:relative;color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-850,#262626);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-size:20px;font-weight:500;line-height:1.2}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CardTitle;\n}();\n\nexport { Card as ion_card, CardContent as ion_card_content, CardHeader as ion_card_header, CardSubtitle as ion_card_subtitle, CardTitle as ion_card_title };","map":null,"metadata":{},"sourceType":"module"}