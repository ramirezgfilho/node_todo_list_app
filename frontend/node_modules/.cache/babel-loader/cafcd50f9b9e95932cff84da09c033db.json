{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { c as createAnimation } from './animation-af478fe9.js';\n/**\n * baseAnimation\n * Base class which is extended by the various types. Each\n * type will provide their own animations for open and close\n * and registers itself with Menu.\n */\n\nvar baseAnimation = function () {\n  // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\n  // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\n  // \"Apply the sharp curve to items temporarily leaving the screen that may return\n  // from the same exit point. When they return, use the deceleration curve. On mobile,\n  // this transition typically occurs over 300ms\" -- MD Motion Guide\n  return createAnimation().easing('cubic-bezier(0.0, 0.0, 0.2, 1)') // Deceleration curve (Entering the screen)\n  .duration(300);\n};\n/**\n * Menu Overlay Type\n * The menu slides over the content. The content\n * itself, which is under the menu, does not move.\n */\n\n\nvar menuOverlayAnimation = function (menu) {\n  var closedX;\n  var openedX;\n  var BOX_SHADOW_WIDTH = 8;\n  var width = menu.width + BOX_SHADOW_WIDTH;\n  var menuAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n\n  if (menu.isEndSide) {\n    // right side\n    closedX = width + 'px';\n    openedX = '0px';\n  } else {\n    // left side\n    closedX = -width + 'px';\n    openedX = '0px';\n  }\n\n  menuAnimation.addElement(menu.menuInnerEl).fromTo('transform', \"translateX(\" + closedX + \")\", \"translateX(\" + openedX + \")\");\n  backdropAnimation.addElement(menu.backdropEl).fromTo('opacity', 0.01, 0.32);\n  return baseAnimation().addAnimation([menuAnimation, backdropAnimation]);\n};\n/**\n * Menu Push Type\n * The content slides over to reveal the menu underneath.\n * The menu itself also slides over to reveal its bad self.\n */\n\n\nvar menuPushAnimation = function (menu) {\n  var contentOpenedX;\n  var menuClosedX;\n  var width = menu.width;\n\n  if (menu.isEndSide) {\n    contentOpenedX = -width + 'px';\n    menuClosedX = width + 'px';\n  } else {\n    contentOpenedX = width + 'px';\n    menuClosedX = -width + 'px';\n  }\n\n  var menuAnimation = createAnimation().addElement(menu.menuInnerEl).fromTo('transform', \"translateX(\" + menuClosedX + \")\", 'translateX(0px)');\n  var contentAnimation = createAnimation().addElement(menu.contentEl).fromTo('transform', 'translateX(0px)', \"translateX(\" + contentOpenedX + \")\");\n  var backdropAnimation = createAnimation().addElement(menu.backdropEl).fromTo('opacity', 0.01, 0.32);\n  return baseAnimation().addAnimation([menuAnimation, backdropAnimation, contentAnimation]);\n};\n/**\n * Menu Reveal Type\n * The content slides over to reveal the menu underneath.\n * The menu itself, which is under the content, does not move.\n */\n\n\nvar menuRevealAnimation = function (menu) {\n  var openedX = menu.width * (menu.isEndSide ? -1 : 1) + 'px';\n  var contentOpen = createAnimation().addElement(menu.contentEl) // REVIEW\n  .fromTo('transform', 'translateX(0px)', \"translateX(\" + openedX + \")\");\n  return baseAnimation().addAnimation(contentOpen);\n};\n\nvar createMenuController = function () {\n  var menuAnimations = new Map();\n  var menus = [];\n\n  var open = function (menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , get(menu)];\n\n          case 1:\n            menuEl = _a.sent();\n\n            if (menuEl) {\n              return [2\n              /*return*/\n              , menuEl.open()];\n            }\n\n            return [2\n            /*return*/\n            , false];\n        }\n      });\n    });\n  };\n\n  var close = function (menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , menu !== undefined ? get(menu) : getOpen()];\n\n          case 1:\n            menuEl = _a.sent();\n\n            if (menuEl !== undefined) {\n              return [2\n              /*return*/\n              , menuEl.close()];\n            }\n\n            return [2\n            /*return*/\n            , false];\n        }\n      });\n    });\n  };\n\n  var toggle = function (menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , get(menu)];\n\n          case 1:\n            menuEl = _a.sent();\n\n            if (menuEl) {\n              return [2\n              /*return*/\n              , menuEl.toggle()];\n            }\n\n            return [2\n            /*return*/\n            , false];\n        }\n      });\n    });\n  };\n\n  var enable = function (shouldEnable, menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , get(menu)];\n\n          case 1:\n            menuEl = _a.sent();\n\n            if (menuEl) {\n              menuEl.disabled = !shouldEnable;\n            }\n\n            return [2\n            /*return*/\n            , menuEl];\n        }\n      });\n    });\n  };\n\n  var swipeGesture = function (shouldEnable, menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , get(menu)];\n\n          case 1:\n            menuEl = _a.sent();\n\n            if (menuEl) {\n              menuEl.swipeGesture = shouldEnable;\n            }\n\n            return [2\n            /*return*/\n            , menuEl];\n        }\n      });\n    });\n  };\n\n  var isOpen = function (menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl, menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(menu != null)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , get(menu)];\n\n          case 1:\n            menuEl = _a.sent();\n            return [2\n            /*return*/\n            , menuEl !== undefined && menuEl.isOpen()];\n\n          case 2:\n            return [4\n            /*yield*/\n            , getOpen()];\n\n          case 3:\n            menuEl = _a.sent();\n            return [2\n            /*return*/\n            , menuEl !== undefined];\n        }\n      });\n    });\n  };\n\n  var isEnabled = function (menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , get(menu)];\n\n          case 1:\n            menuEl = _a.sent();\n\n            if (menuEl) {\n              return [2\n              /*return*/\n              , !menuEl.disabled];\n            }\n\n            return [2\n            /*return*/\n            , false];\n        }\n      });\n    });\n  };\n\n  var get = function (menu) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var menuRef, menuEl;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , waitUntilReady()];\n\n          case 1:\n            _a.sent();\n\n            if (menu === 'start' || menu === 'end') {\n              menuRef = find(function (m) {\n                return m.side === menu && !m.disabled;\n              });\n\n              if (menuRef) {\n                return [2\n                /*return*/\n                , menuRef];\n              } // didn't find a menu side that is enabled\n              // so try to get the first menu side found\n\n\n              return [2\n              /*return*/\n              , find(function (m) {\n                return m.side === menu;\n              })];\n            } else if (menu != null) {\n              // the menuId was not left or right\n              // so try to get the menu by its \"id\"\n              return [2\n              /*return*/\n              , find(function (m) {\n                return m.menuId === menu;\n              })];\n            }\n\n            menuEl = find(function (m) {\n              return !m.disabled;\n            });\n\n            if (menuEl) {\n              return [2\n              /*return*/\n              , menuEl];\n            } // get the first menu in the array, if one exists\n\n\n            return [2\n            /*return*/\n            , menus.length > 0 ? menus[0].el : undefined];\n        }\n      });\n    });\n  };\n  /**\n   * Get the instance of the opened menu. Returns `null` if a menu is not found.\n   */\n\n\n  var getOpen = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , waitUntilReady()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , _getOpenSync()];\n        }\n      });\n    });\n  };\n  /**\n   * Get all menu instances.\n   */\n\n\n  var getMenus = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , waitUntilReady()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , getMenusSync()];\n        }\n      });\n    });\n  };\n  /**\n   * Get whether or not a menu is animating. Returns `true` if any\n   * menu is currently animating.\n   */\n\n\n  var isAnimating = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , waitUntilReady()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , isAnimatingSync()];\n        }\n      });\n    });\n  };\n\n  var registerAnimation = function (name, animation) {\n    menuAnimations.set(name, animation);\n  };\n\n  var _register = function (menu) {\n    if (menus.indexOf(menu) < 0) {\n      if (!menu.disabled) {\n        _setActiveMenu(menu);\n      }\n\n      menus.push(menu);\n    }\n  };\n\n  var _unregister = function (menu) {\n    var index = menus.indexOf(menu);\n\n    if (index > -1) {\n      menus.splice(index, 1);\n    }\n  };\n\n  var _setActiveMenu = function (menu) {\n    // if this menu should be enabled\n    // then find all the other menus on this same side\n    // and automatically disable other same side menus\n    var side = menu.side;\n    menus.filter(function (m) {\n      return m.side === side && m !== menu;\n    }).forEach(function (m) {\n      return m.disabled = true;\n    });\n  };\n\n  var _setOpen = function (menu, shouldOpen, animated) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var openedMenu;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (isAnimatingSync()) {\n              return [2\n              /*return*/\n              , false];\n            }\n\n            if (!shouldOpen) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , getOpen()];\n\n          case 1:\n            openedMenu = _a.sent();\n            if (!(openedMenu && menu.el !== openedMenu)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , openedMenu.setOpen(false, false)];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            , menu._setOpen(shouldOpen, animated)];\n        }\n      });\n    });\n  };\n\n  var _createAnimation = function (type, menuCmp) {\n    var animationBuilder = menuAnimations.get(type);\n\n    if (!animationBuilder) {\n      throw new Error('animation not registered');\n    }\n\n    var animation = animationBuilder(menuCmp);\n    return animation;\n  };\n\n  var _getOpenSync = function () {\n    return find(function (m) {\n      return m._isOpen;\n    });\n  };\n\n  var getMenusSync = function () {\n    return menus.map(function (menu) {\n      return menu.el;\n    });\n  };\n\n  var isAnimatingSync = function () {\n    return menus.some(function (menu) {\n      return menu.isAnimating;\n    });\n  };\n\n  var find = function (predicate) {\n    var instance = menus.find(predicate);\n\n    if (instance !== undefined) {\n      return instance.el;\n    }\n\n    return undefined;\n  };\n\n  var waitUntilReady = function () {\n    return Promise.all(Array.from(document.querySelectorAll('ion-menu')).map(function (menu) {\n      return menu.componentOnReady();\n    }));\n  };\n\n  registerAnimation('reveal', menuRevealAnimation);\n  registerAnimation('push', menuPushAnimation);\n  registerAnimation('overlay', menuOverlayAnimation);\n  return {\n    registerAnimation: registerAnimation,\n    get: get,\n    getMenus: getMenus,\n    getOpen: getOpen,\n    isEnabled: isEnabled,\n    swipeGesture: swipeGesture,\n    isAnimating: isAnimating,\n    isOpen: isOpen,\n    enable: enable,\n    toggle: toggle,\n    close: close,\n    open: open,\n    _getOpenSync: _getOpenSync,\n    _createAnimation: _createAnimation,\n    _register: _register,\n    _unregister: _unregister,\n    _setOpen: _setOpen,\n    _setActiveMenu: _setActiveMenu\n  };\n};\n\nvar menuController =\n/*@__PURE__*/\ncreateMenuController();\nexport { menuController as m };","map":null,"metadata":{},"sourceType":"module"}