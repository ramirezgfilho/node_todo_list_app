{"ast":null,"code":"import { r as registerInstance, c as getIonMode, d as createEvent, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport './helpers-46f4a262.js';\nimport { c as createAnimation } from './animation-af478fe9.js';\nimport { B as BACKDROP, i as isCancel, d as prepareOverlay, e as present, f as dismiss, g as eventMethod, s as safeCall } from './overlays-10640d86.js';\nimport { g as getClassMap } from './theme-18cbe2cc.js';\nimport { s as sanitizeDOMString } from './index-3476b023.js';\n/**\n * iOS Alert Enter Animation\n */\n\nvar iosEnterAnimation = function (baseEl) {\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 0.3);\n  wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([{\n    offset: 0,\n    opacity: '0.01',\n    transform: 'scale(1.1)'\n  }, {\n    offset: 1,\n    opacity: '1',\n    transform: 'scale(1)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n/**\n * iOS Alert Leave Animation\n */\n\n\nvar iosLeaveAnimation = function (baseEl) {\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.3, 0);\n  wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([{\n    offset: 0,\n    opacity: 0.99,\n    transform: 'scale(1)'\n  }, {\n    offset: 1,\n    opacity: 0,\n    transform: 'scale(0.9)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(200).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n/**\n * Md Alert Enter Animation\n */\n\n\nvar mdEnterAnimation = function (baseEl) {\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 0.32);\n  wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([{\n    offset: 0,\n    opacity: '0.01',\n    transform: 'scale(0.9)'\n  }, {\n    offset: 1,\n    opacity: '1',\n    transform: 'scale(1)'\n  }]);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(150).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n/**\n * Md Alert Leave Animation\n */\n\n\nvar mdLeaveAnimation = function (baseEl) {\n  var baseAnimation = createAnimation();\n  var backdropAnimation = createAnimation();\n  var wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.32, 0);\n  wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).fromTo('opacity', 0.99, 0);\n  return baseAnimation.addElement(baseEl).easing('ease-in-out').duration(150).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nvar Alert =\n/** @class */\nfunction () {\n  function Alert(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.processedInputs = [];\n    this.processedButtons = [];\n    this.presented = false;\n    this.mode = getIonMode(this);\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n\n    this.keyboardClose = true;\n    /**\n     * Array of buttons to be added to the alert.\n     */\n\n    this.buttons = [];\n    /**\n     * Array of input to show in the alert.\n     */\n\n    this.inputs = [];\n    /**\n     * If `true`, the alert will be dismissed when the backdrop is clicked.\n     */\n\n    this.backdropDismiss = true;\n    /**\n     * If `true`, the alert will be translucent.\n     * Only applies when the mode is `\"ios\"` and the device supports\n     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n     */\n\n    this.translucent = false;\n    /**\n     * If `true`, the alert will animate.\n     */\n\n    this.animated = true;\n\n    this.onBackdropTap = function () {\n      _this.dismiss(undefined, BACKDROP);\n    };\n\n    this.dispatchCancelHandler = function (ev) {\n      var role = ev.detail.role;\n\n      if (isCancel(role)) {\n        var cancelButton = _this.processedButtons.find(function (b) {\n          return b.role === 'cancel';\n        });\n\n        _this.callButtonHandler(cancelButton);\n      }\n    };\n\n    prepareOverlay(this.el);\n    this.didPresent = createEvent(this, \"ionAlertDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionAlertWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionAlertWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionAlertDidDismiss\", 7);\n  }\n\n  Alert.prototype.buttonsChanged = function () {\n    var buttons = this.buttons;\n    this.processedButtons = buttons.map(function (btn) {\n      return typeof btn === 'string' ? {\n        text: btn,\n        role: btn.toLowerCase() === 'cancel' ? 'cancel' : undefined\n      } : btn;\n    });\n  };\n\n  Alert.prototype.inputsChanged = function () {\n    var _this = this;\n\n    var inputs = this.inputs; // An alert can be created with several different inputs. Radios,\n    // checkboxes and inputs are all accepted, but they cannot be mixed.\n\n    var inputTypes = new Set(inputs.map(function (i) {\n      return i.type;\n    }));\n\n    if (inputTypes.has('checkbox') && inputTypes.has('radio')) {\n      console.warn(\"Alert cannot mix input types: \" + Array.from(inputTypes.values()).join('/') + \". Please see alert docs for more info.\");\n    }\n\n    this.inputType = inputTypes.values().next().value;\n    this.processedInputs = inputs.map(function (i, index) {\n      return {\n        type: i.type || 'text',\n        name: i.name || \"\" + index,\n        placeholder: i.placeholder || '',\n        value: i.value,\n        label: i.label,\n        checked: !!i.checked,\n        disabled: !!i.disabled,\n        id: i.id || \"alert-input-\" + _this.overlayIndex + \"-\" + index,\n        handler: i.handler,\n        min: i.min,\n        max: i.max\n      };\n    });\n  };\n\n  Alert.prototype.componentWillLoad = function () {\n    this.inputsChanged();\n    this.buttonsChanged();\n  };\n  /**\n   * Present the alert overlay after it has been created.\n   */\n\n\n  Alert.prototype.present = function () {\n    return present(this, 'alertEnter', iosEnterAnimation, mdEnterAnimation);\n  };\n  /**\n   * Dismiss the alert overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the alert.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the alert.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   */\n\n\n  Alert.prototype.dismiss = function (data, role) {\n    return dismiss(this, data, role, 'alertLeave', iosLeaveAnimation, mdLeaveAnimation);\n  };\n  /**\n   * Returns a promise that resolves when the alert did dismiss.\n   */\n\n\n  Alert.prototype.onDidDismiss = function () {\n    return eventMethod(this.el, 'ionAlertDidDismiss');\n  };\n  /**\n   * Returns a promise that resolves when the alert will dismiss.\n   */\n\n\n  Alert.prototype.onWillDismiss = function () {\n    return eventMethod(this.el, 'ionAlertWillDismiss');\n  };\n\n  Alert.prototype.rbClick = function (selectedInput) {\n    for (var _i = 0, _a = this.processedInputs; _i < _a.length; _i++) {\n      var input = _a[_i];\n      input.checked = input === selectedInput;\n    }\n\n    this.activeId = selectedInput.id;\n    safeCall(selectedInput.handler, selectedInput);\n    this.el.forceUpdate();\n  };\n\n  Alert.prototype.cbClick = function (selectedInput) {\n    selectedInput.checked = !selectedInput.checked;\n    safeCall(selectedInput.handler, selectedInput);\n    this.el.forceUpdate();\n  };\n\n  Alert.prototype.buttonClick = function (button) {\n    var role = button.role;\n    var values = this.getValues();\n\n    if (isCancel(role)) {\n      return this.dismiss({\n        values: values\n      }, role);\n    }\n\n    var returnData = this.callButtonHandler(button, values);\n\n    if (returnData !== false) {\n      return this.dismiss(Object.assign({\n        values: values\n      }, returnData), button.role);\n    }\n\n    return Promise.resolve(false);\n  };\n\n  Alert.prototype.callButtonHandler = function (button, data) {\n    if (button && button.handler) {\n      // a handler has been provided, execute it\n      // pass the handler the values from the inputs\n      var returnData = safeCall(button.handler, data);\n\n      if (returnData === false) {\n        // if the return value of the handler is false then do not dismiss\n        return false;\n      }\n\n      if (typeof returnData === 'object') {\n        return returnData;\n      }\n    }\n\n    return {};\n  };\n\n  Alert.prototype.getValues = function () {\n    if (this.processedInputs.length === 0) {\n      // this is an alert without any options/inputs at all\n      return undefined;\n    }\n\n    if (this.inputType === 'radio') {\n      // this is an alert with radio buttons (single value select)\n      // return the one value which is checked, otherwise undefined\n      var checkedInput = this.processedInputs.find(function (i) {\n        return !!i.checked;\n      });\n      return checkedInput ? checkedInput.value : undefined;\n    }\n\n    if (this.inputType === 'checkbox') {\n      // this is an alert with checkboxes (multiple value select)\n      // return an array of all the checked values\n      return this.processedInputs.filter(function (i) {\n        return i.checked;\n      }).map(function (i) {\n        return i.value;\n      });\n    } // this is an alert with text inputs\n    // return an object of all the values with the input name as the key\n\n\n    var values = {};\n    this.processedInputs.forEach(function (i) {\n      values[i.name] = i.value || '';\n    });\n    return values;\n  };\n\n  Alert.prototype.renderAlertInputs = function (labelledBy) {\n    switch (this.inputType) {\n      case 'checkbox':\n        return this.renderCheckbox(labelledBy);\n\n      case 'radio':\n        return this.renderRadio(labelledBy);\n\n      default:\n        return this.renderInput(labelledBy);\n    }\n  };\n\n  Alert.prototype.renderCheckbox = function (labelledby) {\n    var _this = this;\n\n    var inputs = this.processedInputs;\n    var mode = getIonMode(this);\n\n    if (inputs.length === 0) {\n      return null;\n    }\n\n    return h(\"div\", {\n      class: \"alert-checkbox-group\",\n      \"aria-labelledby\": labelledby\n    }, inputs.map(function (i) {\n      return h(\"button\", {\n        type: \"button\",\n        onClick: function () {\n          return _this.cbClick(i);\n        },\n        \"aria-checked\": \"\" + i.checked,\n        id: i.id,\n        disabled: i.disabled,\n        tabIndex: 0,\n        role: \"checkbox\",\n        class: {\n          'alert-tappable': true,\n          'alert-checkbox': true,\n          'alert-checkbox-button': true,\n          'ion-focusable': true,\n          'alert-checkbox-button-disabled': i.disabled || false\n        }\n      }, h(\"div\", {\n        class: \"alert-button-inner\"\n      }, h(\"div\", {\n        class: \"alert-checkbox-icon\"\n      }, h(\"div\", {\n        class: \"alert-checkbox-inner\"\n      })), h(\"div\", {\n        class: \"alert-checkbox-label\"\n      }, i.label)), mode === 'md' && h(\"ion-ripple-effect\", null));\n    }));\n  };\n\n  Alert.prototype.renderRadio = function (labelledby) {\n    var _this = this;\n\n    var inputs = this.processedInputs;\n\n    if (inputs.length === 0) {\n      return null;\n    }\n\n    return h(\"div\", {\n      class: \"alert-radio-group\",\n      role: \"radiogroup\",\n      \"aria-labelledby\": labelledby,\n      \"aria-activedescendant\": this.activeId\n    }, inputs.map(function (i) {\n      return h(\"button\", {\n        type: \"button\",\n        onClick: function () {\n          return _this.rbClick(i);\n        },\n        \"aria-checked\": \"\" + i.checked,\n        disabled: i.disabled,\n        id: i.id,\n        tabIndex: 0,\n        class: {\n          'alert-radio-button': true,\n          'alert-tappable': true,\n          'alert-radio': true,\n          'ion-focusable': true,\n          'alert-radio-button-disabled': i.disabled || false\n        },\n        role: \"radio\"\n      }, h(\"div\", {\n        class: \"alert-button-inner\"\n      }, h(\"div\", {\n        class: \"alert-radio-icon\"\n      }, h(\"div\", {\n        class: \"alert-radio-inner\"\n      })), h(\"div\", {\n        class: \"alert-radio-label\"\n      }, i.label)));\n    }));\n  };\n\n  Alert.prototype.renderInput = function (labelledby) {\n    var inputs = this.processedInputs;\n\n    if (inputs.length === 0) {\n      return null;\n    }\n\n    return h(\"div\", {\n      class: \"alert-input-group\",\n      \"aria-labelledby\": labelledby\n    }, inputs.map(function (i) {\n      return h(\"div\", {\n        class: \"alert-input-wrapper\"\n      }, h(\"input\", {\n        placeholder: i.placeholder,\n        value: i.value,\n        type: i.type,\n        min: i.min,\n        max: i.max,\n        onInput: function (e) {\n          return i.value = e.target.value;\n        },\n        id: i.id,\n        disabled: i.disabled,\n        tabIndex: 0,\n        class: {\n          'alert-input': true,\n          'alert-input-disabled': i.disabled || false\n        }\n      }));\n    }));\n  };\n\n  Alert.prototype.renderAlertButtons = function () {\n    var _this = this;\n\n    var buttons = this.processedButtons;\n    var mode = getIonMode(this);\n    var alertButtonGroupClass = {\n      'alert-button-group': true,\n      'alert-button-group-vertical': buttons.length > 2\n    };\n    return h(\"div\", {\n      class: alertButtonGroupClass\n    }, buttons.map(function (button) {\n      return h(\"button\", {\n        type: \"button\",\n        class: buttonClass(button),\n        tabIndex: 0,\n        onClick: function () {\n          return _this.buttonClick(button);\n        }\n      }, h(\"span\", {\n        class: \"alert-button-inner\"\n      }, button.text), mode === 'md' && h(\"ion-ripple-effect\", null));\n    }));\n  };\n\n  Alert.prototype.render = function () {\n    var _a;\n\n    var _b = this,\n        overlayIndex = _b.overlayIndex,\n        header = _b.header,\n        subHeader = _b.subHeader;\n\n    var mode = getIonMode(this);\n    var hdrId = \"alert-\" + overlayIndex + \"-hdr\";\n    var subHdrId = \"alert-\" + overlayIndex + \"-sub-hdr\";\n    var msgId = \"alert-\" + overlayIndex + \"-msg\";\n    var labelledById;\n\n    if (header !== undefined) {\n      labelledById = hdrId;\n    } else if (subHeader !== undefined) {\n      labelledById = subHdrId;\n    }\n\n    return h(Host, {\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      style: {\n        zIndex: \"\" + (20000 + overlayIndex)\n      },\n      class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), (_a = {}, _a[mode] = true, _a['alert-translucent'] = this.translucent, _a)),\n      onIonAlertWillDismiss: this.dispatchCancelHandler,\n      onIonBackdropTap: this.onBackdropTap\n    }, h(\"ion-backdrop\", {\n      tappable: this.backdropDismiss\n    }), h(\"div\", {\n      class: \"alert-wrapper\"\n    }, h(\"div\", {\n      class: \"alert-head\"\n    }, header && h(\"h2\", {\n      id: hdrId,\n      class: \"alert-title\"\n    }, header), subHeader && h(\"h2\", {\n      id: subHdrId,\n      class: \"alert-sub-title\"\n    }, subHeader)), h(\"div\", {\n      id: msgId,\n      class: \"alert-message\",\n      innerHTML: sanitizeDOMString(this.message)\n    }), this.renderAlertInputs(labelledById), this.renderAlertButtons()));\n  };\n\n  Object.defineProperty(Alert.prototype, \"el\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Alert, \"watchers\", {\n    get: function () {\n      return {\n        \"buttons\": [\"buttonsChanged\"],\n        \"inputs\": [\"inputsChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Alert, \"style\", {\n    get: function () {\n      return \".sc-ion-alert-ios-h{--min-width:250px;--width:auto;--min-height:auto;--height:auto;--max-height:90%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;font-family:var(--ion-font-family,inherit);contain:strict;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.overlay-hidden.sc-ion-alert-ios-h{display:none}.alert-top.sc-ion-alert-ios-h{padding-top:50px;-ms-flex-align:start;align-items:flex-start}.alert-wrapper.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:content;opacity:0;z-index:10}.alert-title.sc-ion-alert-ios{margin-top:0}.alert-sub-title.sc-ion-alert-ios, .alert-title.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}.alert-sub-title.sc-ion-alert-ios{margin-top:5px;font-weight:400}.alert-message.sc-ion-alert-ios{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-overflow-scrolling:touch;overflow-y:auto;overscroll-behavior-y:contain}.alert-checkbox-group.sc-ion-alert-ios::-webkit-scrollbar, .alert-message.sc-ion-alert-ios::-webkit-scrollbar, .alert-radio-group.sc-ion-alert-ios::-webkit-scrollbar{display:none}.alert-input.sc-ion-alert-ios{padding-left:0;padding-right:0;padding-top:10px;padding-bottom:10px;width:100%;border:0;background:inherit;font:inherit;-webkit-box-sizing:border-box;box-sizing:border-box}.alert-button-group.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;width:100%}.alert-button-group-vertical.sc-ion-alert-ios{-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.alert-button.sc-ion-alert-ios{display:block;border:0;font-size:14px;line-height:20px;z-index:0}.alert-button.ion-focused.sc-ion-alert-ios, .alert-tappable.ion-focused.sc-ion-alert-ios{background:var(--ion-color-step-100,#e6e6e6)}.alert-button-inner.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%}.alert-checkbox-button-disabled.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios, .alert-input-disabled.sc-ion-alert-ios, .alert-radio-button-disabled.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios{cursor:default;opacity:.5;pointer-events:none}.alert-tappable.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;display:-ms-flexbox;display:flex;width:100%;border:0;background:transparent;font-size:inherit;line-height:normal;text-align:start;-webkit-appearance:none;-moz-appearance:none;appearance:none;contain:strict}.alert-button.sc-ion-alert-ios, .alert-checkbox.sc-ion-alert-ios, .alert-input.sc-ion-alert-ios, .alert-radio.sc-ion-alert-ios{outline:none}.alert-checkbox-icon.sc-ion-alert-ios, .alert-checkbox-inner.sc-ion-alert-ios, .alert-radio-icon.sc-ion-alert-ios{-webkit-box-sizing:border-box;box-sizing:border-box}.sc-ion-alert-ios-h{--background:var(--ion-overlay-background-color,var(--ion-color-step-100,#f9f9f9));--max-width:270px;font-size:14px}.alert-wrapper.sc-ion-alert-ios{border-radius:13px;-webkit-box-shadow:none;box-shadow:none;overflow:hidden}\\@supports ((-webkit-backdrop-filter:blur(0)) or (backdrop-filter:blur(0))){.alert-translucent.sc-ion-alert-ios-h .alert-wrapper.sc-ion-alert-ios{background:rgba(var(--ion-background-color-rgb,255,255,255),.9);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}.alert-head.sc-ion-alert-ios{padding-left:16px;padding-right:16px;padding-top:12px;padding-bottom:7px;text-align:center}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-head.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.alert-title.sc-ion-alert-ios{margin-top:8px;color:var(--ion-text-color,#000);font-size:17px;font-weight:600}.alert-sub-title.sc-ion-alert-ios{color:var(--ion-color-step-600,#666);font-size:14px}.alert-input-group.sc-ion-alert-ios, .alert-message.sc-ion-alert-ios{padding-left:16px;padding-right:16px;padding-top:0;padding-bottom:21px;color:var(--ion-text-color,#000);font-size:13px;text-align:center}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-input-group.sc-ion-alert-ios, .alert-message.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}.alert-message.sc-ion-alert-ios{max-height:240px}.alert-message.sc-ion-alert-ios:empty{padding-left:0;padding-right:0;padding-top:0;padding-bottom:12px}.alert-input.sc-ion-alert-ios{border-radius:4px;margin-top:10px;padding-left:6px;padding-right:6px;padding-top:6px;padding-bottom:6px;border:.55px solid var(--ion-color-step-250,#bfbfbf);background-color:var(--ion-background-color,#fff);-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-input.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:6px;padding-inline-start:6px;-webkit-padding-end:6px;padding-inline-end:6px}}.alert-input.sc-ion-alert-ios::-webkit-input-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-moz-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios:-ms-input-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-ms-input-placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::placeholder{color:var(--ion-placeholder-color,var(--ion-color-step-400,#999));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-ms-clear{display:none}.alert-checkbox-group.sc-ion-alert-ios, .alert-radio-group.sc-ion-alert-ios{-ms-scroll-chaining:none;overscroll-behavior:contain;max-height:240px;border-top:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2);overflow-y:auto;-webkit-overflow-scrolling:touch}.alert-tappable.sc-ion-alert-ios{height:44px}.alert-radio-label.sc-ion-alert-ios{padding-left:13px;padding-right:13px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;-ms-flex-order:0;order:0;color:var(--ion-text-color,#000);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-radio-label.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:13px;padding-inline-start:13px;-webkit-padding-end:13px;padding-inline-end:13px}}[aria-checked=true].sc-ion-alert-ios .alert-radio-label.sc-ion-alert-ios{color:var(--ion-color-primary,#3880ff)}.alert-radio-icon.sc-ion-alert-ios{position:relative;-ms-flex-order:1;order:1;min-width:30px}[aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios{left:7px;top:-7px;position:absolute;width:6px;height:12px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-color-primary,#3880ff)}[dir=rtl].sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios, [dir=rtl] .sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios, [dir=rtl].sc-ion-alert-ios [aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios{left:unset;right:unset;right:7px}.alert-checkbox-label.sc-ion-alert-ios{padding-left:13px;padding-right:13px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;color:var(--ion-text-color,#000);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-checkbox-label.sc-ion-alert-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:13px;padding-inline-start:13px;-webkit-padding-end:13px;padding-inline-end:13px}}.alert-checkbox-icon.sc-ion-alert-ios{border-radius:50%;margin-left:16px;margin-right:6px;margin-top:10px;margin-bottom:10px;position:relative;width:24px;height:24px;border-width:1px;border-style:solid;border-color:var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)));background-color:var(--ion-item-background,var(--ion-background-color,#fff));contain:strict}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-checkbox-icon.sc-ion-alert-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:6px;margin-inline-end:6px}}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-icon.sc-ion-alert-ios{border-color:var(--ion-color-primary,#3880ff);background-color:var(--ion-color-primary,#3880ff)}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios{left:9px;top:4px;position:absolute;width:5px;height:12px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:1px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-background-color,#fff)}[dir=rtl].sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios, [dir=rtl] .sc-ion-alert-ios-h [aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios, [dir=rtl].sc-ion-alert-ios [aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios{left:unset;right:unset;right:9px}.alert-button-group.sc-ion-alert-ios{margin-right:-.55px;-ms-flex-wrap:wrap;flex-wrap:wrap}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.alert-button-group.sc-ion-alert-ios{margin-right:unset;-webkit-margin-end:-.55px;margin-inline-end:-.55px}}.alert-button.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:0;-ms-flex:1 1 auto;flex:1 1 auto;min-width:50%;height:44px;border-top:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2);border-right:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2);background-color:transparent;color:var(--ion-color-primary,#3880ff);font-size:17px;overflow:hidden}[dir=rtl].sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:first-child, [dir=rtl] .sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:first-child, [dir=rtl].sc-ion-alert-ios .alert-button.sc-ion-alert-ios:first-child{border-right:0}.alert-button.sc-ion-alert-ios:last-child{border-right:0;font-weight:700}[dir=rtl].sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:last-child, [dir=rtl] .sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:last-child, [dir=rtl].sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child{border-right:.55px solid rgba(var(--ion-text-color-rgb,0,0,0),.2)}.alert-button.activated.sc-ion-alert-ios{background-color:rgba(var(--ion-text-color-rgb,0,0,0),.1)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Alert;\n}();\n\nvar buttonClass = function (button) {\n  return Object.assign({\n    'alert-button': true,\n    'ion-focusable': true,\n    'ion-activatable': true\n  }, getClassMap(button.cssClass));\n};\n\nexport { Alert as ion_alert };","map":null,"metadata":{},"sourceType":"module"}