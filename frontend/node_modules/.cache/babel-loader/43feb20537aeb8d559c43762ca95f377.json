{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, h, H as Host, e as getElement, d as createEvent } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { a as attachComponent } from './framework-delegate-c2e2e1f4.js';\n\nvar Tab =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    registerInstance(this, hostRef);\n    this.loaded = false;\n    /** @internal */\n\n    this.active = false;\n  }\n\n  class_1.prototype.componentWillLoad = function () {};\n  /** Set the active component for the tab */\n\n\n  class_1.prototype.setActive = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.prepareLazyLoaded()];\n\n          case 1:\n            _a.sent();\n\n            this.active = true;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_1.prototype.prepareLazyLoaded = function () {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    return Promise.resolve(undefined);\n  };\n\n  class_1.prototype.render = function () {\n    var _a = this,\n        tab = _a.tab,\n        active = _a.active,\n        component = _a.component;\n\n    return h(Host, {\n      role: \"tabpanel\",\n      \"aria-hidden\": !active ? 'true' : null,\n      \"aria-labelledby\": \"tab-button-\" + tab,\n      class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active\n      }\n    }, h(\"slot\", null));\n  };\n\n  Object.defineProperty(class_1.prototype, \"el\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"style\", {\n    get: function () {\n      return \":host(.tab-hidden){display:none!important}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_1;\n}();\n\nvar Tabs =\n/** @class */\nfunction () {\n  function class_2(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.transitioning = false;\n    /** @internal */\n\n    this.useRouter = false;\n\n    this.onTabClicked = function (ev) {\n      var _a = ev.detail,\n          href = _a.href,\n          tab = _a.tab;\n\n      if (_this.useRouter && href !== undefined) {\n        var router = document.querySelector('ion-router');\n\n        if (router) {\n          router.push(href);\n        }\n      } else {\n        _this.select(tab);\n      }\n    };\n\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n    this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n    this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n  }\n\n  class_2.prototype.componentWillLoad = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var tabs;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.useRouter) {\n              this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n            }\n\n            if (!!this.useRouter) return [3\n            /*break*/\n            , 2];\n            tabs = this.tabs;\n            return [4\n            /*yield*/\n            , this.select(tabs[0])];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            this.ionNavWillLoad.emit();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  class_2.prototype.componentWillRender = function () {\n    var tabBar = this.el.querySelector('ion-tab-bar');\n\n    if (tabBar) {\n      var tab = this.selectedTab ? this.selectedTab.tab : undefined;\n      tabBar.selectedTab = tab;\n    }\n  };\n  /**\n   * Select a tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n\n\n  class_2.prototype.select = function (tab) {\n    return __awaiter(this, void 0, void 0, function () {\n      var selectedTab;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            selectedTab = getTab(this.tabs, tab);\n\n            if (!this.shouldSwitch(selectedTab)) {\n              return [2\n              /*return*/\n              , false];\n            }\n\n            return [4\n            /*yield*/\n            , this.setActive(selectedTab)];\n\n          case 1:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , this.notifyRouter()];\n\n          case 2:\n            _a.sent();\n\n            this.tabSwitch();\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\n   * Get a specific tab by the value of its `tab` property or an element reference.\n   *\n   * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n   */\n\n\n  class_2.prototype.getTab = function (tab) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getTab(this.tabs, tab)];\n      });\n    });\n  };\n  /**\n   * Get the currently selected tab.\n   */\n\n\n  class_2.prototype.getSelected = function () {\n    return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n  };\n  /** @internal */\n\n\n  class_2.prototype.setRouteId = function (id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var selectedTab;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            selectedTab = getTab(this.tabs, id);\n\n            if (!this.shouldSwitch(selectedTab)) {\n              return [2\n              /*return*/\n              , {\n                changed: false,\n                element: this.selectedTab\n              }];\n            }\n\n            return [4\n            /*yield*/\n            , this.setActive(selectedTab)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              changed: true,\n              element: this.selectedTab,\n              markVisible: function () {\n                return _this.tabSwitch();\n              }\n            }];\n        }\n      });\n    });\n  };\n  /** @internal */\n\n\n  class_2.prototype.getRouteId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var tabId;\n      return __generator(this, function (_a) {\n        tabId = this.selectedTab && this.selectedTab.tab;\n        return [2\n        /*return*/\n        , tabId !== undefined ? {\n          id: tabId,\n          element: this.selectedTab\n        } : undefined];\n      });\n    });\n  };\n\n  class_2.prototype.setActive = function (selectedTab) {\n    if (this.transitioning) {\n      return Promise.reject('transitioning already happening');\n    }\n\n    this.transitioning = true;\n    this.leavingTab = this.selectedTab;\n    this.selectedTab = selectedTab;\n    this.ionTabsWillChange.emit({\n      tab: selectedTab.tab\n    });\n    return selectedTab.setActive();\n  };\n\n  class_2.prototype.tabSwitch = function () {\n    var selectedTab = this.selectedTab;\n    var leavingTab = this.leavingTab;\n    this.leavingTab = undefined;\n    this.transitioning = false;\n\n    if (!selectedTab) {\n      return;\n    }\n\n    if (leavingTab !== selectedTab) {\n      if (leavingTab) {\n        leavingTab.active = false;\n      }\n\n      this.ionTabsDidChange.emit({\n        tab: selectedTab.tab\n      });\n    }\n  };\n\n  class_2.prototype.notifyRouter = function () {\n    if (this.useRouter) {\n      var router = document.querySelector('ion-router');\n\n      if (router) {\n        return router.navChanged('forward');\n      }\n    }\n\n    return Promise.resolve(false);\n  };\n\n  class_2.prototype.shouldSwitch = function (selectedTab) {\n    var leavingTab = this.selectedTab;\n    return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n  };\n\n  Object.defineProperty(class_2.prototype, \"tabs\", {\n    get: function () {\n      return Array.from(this.el.querySelectorAll('ion-tab'));\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  class_2.prototype.render = function () {\n    return h(Host, {\n      onIonTabButtonClick: this.onTabClicked\n    }, h(\"slot\", {\n      name: \"top\"\n    }), h(\"div\", {\n      class: \"tabs-inner\"\n    }, h(\"slot\", null)), h(\"slot\", {\n      name: \"bottom\"\n    }));\n  };\n\n  Object.defineProperty(class_2.prototype, \"el\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_2, \"style\", {\n    get: function () {\n      return \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;z-index:0}.tabs-inner,:host{contain:layout size style}.tabs-inner{position:relative;-ms-flex:1;flex:1}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return class_2;\n}();\n\nvar getTab = function (tabs, tab) {\n  var tabEl = typeof tab === 'string' ? tabs.find(function (t) {\n    return t.tab === tab;\n  }) : tab;\n\n  if (!tabEl) {\n    console.error(\"tab with id: \\\"\" + tabEl + \"\\\" does not exist\");\n  }\n\n  return tabEl;\n};\n\nexport { Tab as ion_tab, Tabs as ion_tabs };","map":null,"metadata":{},"sourceType":"module"}